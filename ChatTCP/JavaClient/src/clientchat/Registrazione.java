/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clientchat;

import java.awt.Color;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JFrame;
import oggetti.Messaggio;

/**
 *
 * @author MATTI
 */
public class Registrazione extends JFrame implements Observer {

    /**
     * Creates new form RegistrazioneAccesso
     */
    private Connection conn;
    private Service service;

    public Registrazione(Service ser) {
        initComponents();
        service = ser;
        suggerimento.setForeground(Color.red);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nome = new javax.swing.JTextField();
        cognome = new javax.swing.JTextField();
        nomeUtente = new javax.swing.JTextField();
        registrati = new javax.swing.JButton();
        utenteRegistrato = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lname = new javax.swing.JLabel();
        lCognome = new javax.swing.JLabel();
        lNomeUtente = new javax.swing.JLabel();
        lPassword = new javax.swing.JLabel();
        lPasswordConferma = new javax.swing.JLabel();
        suggerimento = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        passwordConferma = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Benvenuto in YourChat!");

        nome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nomeFocusGained(evt);
            }
        });
        nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeActionPerformed(evt);
            }
        });

        cognome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cognomeFocusGained(evt);
            }
        });

        nomeUtente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nomeUtenteFocusGained(evt);
            }
        });

        registrati.setText("Registrati");
        registrati.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                registratiMouseReleased(evt);
            }
        });
        registrati.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registratiActionPerformed(evt);
            }
        });

        utenteRegistrato.setText("Sei gi√† registrato, effettua l'accesso");
        utenteRegistrato.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                utenteRegistratoMouseReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText(" Registrati per poter utilizzare il servizio di messaggistica");

        lname.setText("Nome");

        lCognome.setText("Cognome");

        lNomeUtente.setText("Nome utente");

        lPassword.setText("Password");

        lPasswordConferma.setText("Ripeti password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(suggerimento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(registrati, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(utenteRegistrato)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lNomeUtente)
                                            .addComponent(lPassword))
                                        .addGap(18, 18, 18))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lname)
                                        .addGap(53, 53, 53)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nomeUtente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(nome, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(password))
                                .addGap(53, 53, 53)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lPasswordConferma)
                                    .addComponent(lCognome))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cognome, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(passwordConferma, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(10, 10, 10))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lname))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nomeUtente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lNomeUtente))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lPassword))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cognome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lCognome))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lPasswordConferma)
                            .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordConferma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(suggerimento, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(registrati)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(utenteRegistrato)
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeActionPerformed

    private void registratiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registratiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_registratiActionPerformed

    private void registratiMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registratiMouseReleased
        String sNome, sCognome, sNomeUtente, sPassword;
        if (!suggerimento.getText().equals("Sei disconnesso dal server")) {
            if (control()) {
                sNome = nome.getText();
                sCognome = cognome.getText();
                sNomeUtente = nomeUtente.getText();
                sPassword = password.getText();
                service.registerToDB(sNome, sCognome, sNomeUtente, sPassword);

            } else {
                suggerimento.setText((suggerimento.getText().length() > 0) ? suggerimento.getText() : "Errore sconosciuto");
            }
        } else {
            service.setConnection();
        }
    }//GEN-LAST:event_registratiMouseReleased

    private void nomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nomeFocusGained
        lname.setForeground(Color.BLACK);
    }//GEN-LAST:event_nomeFocusGained

    private void cognomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cognomeFocusGained
        lCognome.setForeground(Color.BLACK);
    }//GEN-LAST:event_cognomeFocusGained

    private void nomeUtenteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nomeUtenteFocusGained
        lNomeUtente.setForeground(Color.BLACK);
        suggerimento.setText("");
    }//GEN-LAST:event_nomeUtenteFocusGained

    private void utenteRegistratoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_utenteRegistratoMouseReleased
        registrato();
    }//GEN-LAST:event_utenteRegistratoMouseReleased

    void registrato() {
        service.doAccesso();
        dispose();
    }

    boolean control() {
        if (nome.getText().length() > 0
                && cognome.getText().length() > 0
                && nomeUtente.getText().length() > 0
                && password.getText().length() > 0
                && passwordConferma.getText().length() > 0
                && password.getText().equals(passwordConferma.getText())) {
            if (nomeUtente.getText().matches("[a-zA-Z0-9]{4,}$")) {
                return true;
            } else {
                suggerimento.setText("Il nome utente pu√≤ contenere solo lettere e numeri e deve essere lungo almeno 4 caratteri");
                lNomeUtente.setForeground(Color.red);
                return false;
            }
        }
        if (nome.getText().length() <= 0) {
            lname.setForeground(Color.red);
        }
        if (cognome.getText().length() <= 0) {
            lCognome.setForeground(Color.red);
        }
        if (nomeUtente.getText().length() <= 0) {
            lNomeUtente.setForeground(Color.red);
        }
        if (password.getText().length() <= 0 || passwordConferma.getText().length() <= 0) {
            lPassword.setForeground(Color.red);
            lPasswordConferma.setForeground(Color.red);
        }
        if (!password.getText().equals(passwordConferma.getText())) {
            lPassword.setForeground(Color.red);
            lPasswordConferma.setForeground(Color.red);
            suggerimento.setText("Le password devono essere uguali!");
        }
        return false;
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cognome;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lCognome;
    private javax.swing.JLabel lNomeUtente;
    private javax.swing.JLabel lPassword;
    private javax.swing.JLabel lPasswordConferma;
    private javax.swing.JLabel lname;
    private javax.swing.JTextField nome;
    private javax.swing.JTextField nomeUtente;
    private javax.swing.JPasswordField password;
    private javax.swing.JPasswordField passwordConferma;
    private javax.swing.JButton registrati;
    private javax.swing.JLabel suggerimento;
    private javax.swing.JLabel utenteRegistrato;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        Service my = (Service) (o);
        Messaggio msg = my.msg;
        switch (msg.getFunzione()) {
            case Messaggio.REGISTRAZIONE:
                String registered[] = (String[]) msg.getMessaggio();
                if (registered[0].equals("1")) {
                    suggerimento.setText(registered[1]);
                } else {
                    service.doAccesso();
                    dispose();
                }
                break;
            case Messaggio.ERRORECONNESSIONE:
                suggerimento.setText((String) msg.getMessaggio());
                registrati.setText("Riprova connessione");
                nomeUtente.setEnabled(false);
                password.setEnabled(false);
                configureButtons(false);
                break;
            case Messaggio.CONNESSO:
                suggerimento.setText((String) msg.getMessaggio());
                registrati.setText("Registrati");
                nomeUtente.setEnabled(true);
                password.setEnabled(true);
                configureButtons(true);
                break;
            default:
                suggerimento.setText("Errore sconosciuto");
                break;
        }
    }

    void configureButtons(boolean set) {
        nome.setEnabled(set);
        cognome.setEnabled(set);
        nomeUtente.setEnabled(set);
        password.setEnabled(set);
        passwordConferma.setEnabled(set);
    }
}
