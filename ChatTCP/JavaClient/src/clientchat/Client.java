/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clientchat;

import java.awt.Color;
import java.awt.Image;
import java.util.ArrayList;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.text.BadLocationException;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import oggetti.Messaggio;

/**
 *
 * @author MATTI
 */
public class Client extends JFrame implements Observer {

    DefaultListModel<String> modello;
    private String utenteSel, nomeUtenteNow;
    private Service service;

    private StyledDocument stileChat;
    private SimpleAttributeSet entrata;
    private SimpleAttributeSet uscita;

    public Client(Service ser, String nomeUtente, byte[] image) {
        initComponents();
        utenteSel = "";
        if(image!=null){
        immagine.setIcon(this.setImmagine(image));
        }
        modello = (DefaultListModel<String>) listaUtenti.getModel();
        nomeUtenteNow = nomeUtente;
        this.setTitle(nomeUtenteNow);
        displayNomeUtente.setText(nomeUtenteNow);
        service = ser;
        service.getUtenti(nomeUtenteNow);
        stato.setText("Connsesso");

        stileChat = chat.getStyledDocument();
        entrata = new SimpleAttributeSet();
        StyleConstants.setAlignment(entrata, StyleConstants.ALIGN_LEFT);
        StyleConstants.setForeground(entrata, Color.GRAY);

        uscita = new SimpleAttributeSet();
        StyleConstants.setAlignment(uscita, StyleConstants.ALIGN_RIGHT);
        StyleConstants.setForeground(uscita, Color.decode("#000080"));
        chat.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        eliminaDialog = new javax.swing.JDialog();
        messaggio = new javax.swing.JLabel();
        nomeUtenteEl = new javax.swing.JLabel();
        passwordEl = new javax.swing.JPasswordField();
        confermaBtn = new javax.swing.JButton();
        sugEl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        displayNomeUtente = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaUtenti = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        inputChat = new javax.swing.JTextArea();
        invio = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        stato = new javax.swing.JLabel();
        eliminaAccount = new javax.swing.JButton();
        aggiornaChat = new javax.swing.JButton();
        immagine = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        chat = new javax.swing.JTextPane();

        eliminaDialog.setAlwaysOnTop(true);
        eliminaDialog.setMinimumSize(new java.awt.Dimension(300, 300));
        eliminaDialog.setResizable(false);

        messaggio.setText("Ci dispiace che te ne voglia andare ");

        confermaBtn.setText("Elimina definitivamente");
        confermaBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                confermaBtnMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout eliminaDialogLayout = new javax.swing.GroupLayout(eliminaDialog.getContentPane());
        eliminaDialog.getContentPane().setLayout(eliminaDialogLayout);
        eliminaDialogLayout.setHorizontalGroup(
            eliminaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eliminaDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(eliminaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(messaggio, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                    .addComponent(nomeUtenteEl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, eliminaDialogLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(confermaBtn))
                    .addGroup(eliminaDialogLayout.createSequentialGroup()
                        .addComponent(passwordEl, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(sugEl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        eliminaDialogLayout.setVerticalGroup(
            eliminaDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eliminaDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(messaggio)
                .addGap(18, 18, 18)
                .addComponent(nomeUtenteEl, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(passwordEl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sugEl, javax.swing.GroupLayout.DEFAULT_SIZE, 15, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(confermaBtn)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(630, 445));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Bentornato");

        displayNomeUtente.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        listaUtenti.setModel(new DefaultListModel<String>() {

        }
    );
    listaUtenti.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            listaUtentiMouseClicked(evt);
        }
    });
    listaUtenti.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
        public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
            listaUtentiValueChanged(evt);
        }
    });
    jScrollPane1.setViewportView(listaUtenti);

    inputChat.setColumns(20);
    inputChat.setRows(5);
    jScrollPane3.setViewportView(inputChat);

    invio.setText("Invia");
    invio.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseReleased(java.awt.event.MouseEvent evt) {
            invioMouseReleased(evt);
        }
    });

    jLabel3.setText("Stato:");

    stato.setText("null");

    eliminaAccount.setText("Elimina account");
    eliminaAccount.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseReleased(java.awt.event.MouseEvent evt) {
            eliminaAccountMouseReleased(evt);
        }
    });

    aggiornaChat.setText("Aggiorna chat");
    aggiornaChat.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseReleased(java.awt.event.MouseEvent evt) {
            aggiornaChatMouseReleased(evt);
        }
    });

    jScrollPane5.setViewportView(chat);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(521, 521, 521)
                    .addComponent(aggiornaChat))
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(stato, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                                .addComponent(immagine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(invio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(18, 18, 18)
                                    .addComponent(displayNomeUtente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(jScrollPane5)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(eliminaAccount)))))))
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(displayNomeUtente, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eliminaAccount))
                .addComponent(immagine, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(invio, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(aggiornaChat)
                .addComponent(jLabel3)
                .addComponent(stato))
            .addContainerGap())
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listaUtentiValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaUtentiValueChanged

    }//GEN-LAST:event_listaUtentiValueChanged

    private void listaUtentiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaUtentiMouseClicked
        chat.setText("");
        utenteSel = listaUtenti.getSelectedValue();
        updateChat();

    }//GEN-LAST:event_listaUtentiMouseClicked

    private void invioMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invioMouseReleased
        if (inputChat.getText().length() > 0 && inputChat.getText().length() < 500) {
            service.saveChat(inputChat.getText(),nomeUtenteNow, utenteSel);
        } else {
            inputChat.setText("Inserisci almeno 1 carattere e al massimo 500");
        }
    }//GEN-LAST:event_invioMouseReleased

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        service.closeConnection(nomeUtenteNow);
    }//GEN-LAST:event_formWindowClosed

    private void eliminaAccountMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminaAccountMouseReleased
        eliminaDialog.setVisible(true);
        eliminaDialog.setAlwaysOnTop(true);
        messaggio.setText(messaggio.getText().toString() + nomeUtenteNow);
        nomeUtenteEl.setEnabled(false);
        nomeUtenteEl.setText(nomeUtenteNow);
    }//GEN-LAST:event_eliminaAccountMouseReleased

    private void confermaBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confermaBtnMouseReleased
        sugEl.setText("");
        if (passwordEl.getText().toString().length() > 0) {
            service.deleteAccount(passwordEl.getText(), nomeUtenteNow);
        } else {
            sugEl.setForeground(Color.red);
            sugEl.setText("Inserisci la password");
        }
    }//GEN-LAST:event_confermaBtnMouseReleased

    private void aggiornaChatMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aggiornaChatMouseReleased
        updateChat();
    }//GEN-LAST:event_aggiornaChatMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aggiornaChat;
    private javax.swing.JTextPane chat;
    private javax.swing.JButton confermaBtn;
    private javax.swing.JLabel displayNomeUtente;
    private javax.swing.JButton eliminaAccount;
    private javax.swing.JDialog eliminaDialog;
    private javax.swing.JLabel immagine;
    private javax.swing.JTextArea inputChat;
    private javax.swing.JButton invio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JList<String> listaUtenti;
    private javax.swing.JLabel messaggio;
    private javax.swing.JLabel nomeUtenteEl;
    private javax.swing.JPasswordField passwordEl;
    private javax.swing.JLabel stato;
    private javax.swing.JLabel sugEl;
    // End of variables declaration//GEN-END:variables

    private void updateChat() {
        service.showChat(nomeUtenteNow, utenteSel);
    }

    @Override
    public void update(Observable o, Object arg) {
        Service my = (Service) (o);
        Messaggio msg = my.msg;
        switch (msg.getFunzione()) {
            case Messaggio.ERRORECONNESSIONE:
                stato.setText("Disconnesso");
                eliminaAccount.setEnabled(false);
                invio.setEnabled(false);
                inputChat.setEnabled(false);
                aggiornaChat.setEnabled(false);
                break;
            case Messaggio.CANCELLAZIONE:
                String check = String.valueOf(msg.getMessaggio());
                if (check.equals("false")) {
                    sugEl.setText("Password errata");
                } else {
                    eliminaDialog.dispose();
                    dispose();
                    service.doAccesso();
                }
                break;
            case Messaggio.MOSTRAMESSAGGIO:
                chat.setText("");
                ArrayList<String[]> chatT = (ArrayList<String[]>) msg.getMessaggio();
                if (chatT.isEmpty() || chatT.get(0)[0].equals("0")) {
                    chat.setText("Nessuna conversazione momentaneamente");
                } else if (chatT.get(0)[0].equals("Disconnesso")) {
                    stato.setText("Oh no, sembra che il server sia disconnesso :/");
                } else {
                    for (int i = 0; i < chatT.size(); i++) {
                        String chatI[] = chatT.get(i);
                        try {
                            if (!chatI[0].equals(msg.getNomeUtenteDest()+": ")) {
                                stileChat.setParagraphAttributes(stileChat.getLength(), 1, uscita, false);
                                stileChat.insertString(stileChat.getLength(), chatI[2] + "\n" + chatI[1] + "\n", uscita);
                            } else {
                                stileChat.setParagraphAttributes(stileChat.getLength(), 1, entrata, false);
                                stileChat.insertString(stileChat.getLength(),chatI[2] + "\n" + chatI[1] + "\n", entrata);
                            }
                        } catch (BadLocationException ex) {
                            //Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
                break;
            case Messaggio.OTTIENIUTENTI:
                ArrayList<String> utenti = (ArrayList<String>) msg.getMessaggio();
                for (int i = 0; i < utenti.size(); i++) {
                    modello.addElement(utenti.get(i));
                }
                break;
            case Messaggio.SALVACONVERSAZIONE:
                String data = String.valueOf(msg.getMessaggio());
                if (data.equals("true")) {
                    try {
                        stileChat.setParagraphAttributes(stileChat.getLength(), 1, uscita, false);
                        stileChat.insertString(stileChat.getLength(), "Tu: " + inputChat.getText() + "\n", uscita);
                        inputChat.setText("");
                    } catch (BadLocationException ex) {
                        Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else if (data.contains("disconnesso")) {
                    stato.setText("Disconnesso, il messaggio non è stato inviato");
                } else {
                    stato.setText("Errore sconosciuto, il messaggio non è stato inviato");
                }
                break;
            case Messaggio.CONNESSO:
                stato.setText("Connesso");
                break;
            default:
                System.out.println("Errore sconosciuto");
                break;
        }
    }

    private ImageIcon setImmagine(byte[] percorso) {
        ImageIcon myImage = new ImageIcon(percorso);
        Image img = myImage.getImage();
        Image newImg = img.getScaledInstance(immagine.getWidth(), immagine.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }
}
