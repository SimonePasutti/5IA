/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chattcp;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author Piergiorgio
 */
public class Client extends javax.swing.JFrame {

    Socket socket = null;
    DataInputStream in;
    DataOutputStream out;
    int porta = 1234; // porta dove avviene la comunicazione
    String serverAddress = "localhost";
    String messaggio = "";
    static String nome;
    DatiClient d;

    enum Stato {
        CONNESSO, DISCONNESSO
    };
    Stato stato;

    private Socket connetti(String username) {
        try {
            myLog("[Io] Mi sto connettendo al server... \n");
            socket = new Socket(serverAddress, porta);
            myLog("[Io] Connesso al server \n");
            in = new DataInputStream(socket.getInputStream());
            out = new DataOutputStream(socket.getOutputStream());
            d = new DatiClient(username, socket.getLocalPort(), in, out);
            ChatTCP.connessi.add(d.getDatiClient());
            System.out.println(ChatTCP.connessi.get(0).username + "zopiopoinjnvkzds");
            stato = Stato.CONNESSO;
        } catch (Exception ex) {
            myLog("[Io] Non riesco a connettermi al server \n");
            stato = Stato.DISCONNESSO;
        }
        return socket;
    }

    void comunica() {
        int n = utenti.getSelectedIndex();
        out = ChatTCP.connessi.get(n).getOut();
        in = ChatTCP.connessi.get(n).getIn();
        try {
            myLog("[Io] " + inserisci.getText() + "\n");
            out.writeBytes(inserisci.getText() + "\n");
            inserisci.setText("");
            myLog("[Server] " + in.readLine() + "\n");
        } catch (Exception ex) {
            myLog("[Io] Comunizazione con il server interrotta \n");
            for (int i = 0; i < ChatTCP.connessi.size(); i++) {
                if(ChatTCP.connessi.get(i).getUsername().compareTo(d.getUsername()) == 0){
                    ChatTCP.connessi.remove(i);
                    break;
                }
            }
            stato = Stato.DISCONNESSO;
        }
    }

    private void myLog(String message) {
        messaggio += message;
        chat.setText(messaggio);
    }

    private void settaLista() {
        DefaultListModel h = new DefaultListModel();
        utenti.setModel(h);
        //if(ChatTCP.connessi.size() > 0)
        for (int i = 0; i < ChatTCP.connessi.size(); i++) {
            h.addElement(ChatTCP.connessi.get(i).getUsername());
        }
    }

    public Client(String username) {
        super("Whatsappete");
        initComponents();
        connetti(username);
        settaLista();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        invia = new javax.swing.JButton();
        inserisci = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        chat = new javax.swing.JTextPane();
        esci = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        utenti = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        invia.setText("Invia");
        invia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inviaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 153, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Whatsappete");

        chat.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        jScrollPane1.setViewportView(chat);

        esci.setText("Esci");
        esci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                esciActionPerformed(evt);
            }
        });

        utenti.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        utenti.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        utenti.setToolTipText("");
        utenti.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                utentiMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(utenti);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                    .addComponent(inserisci))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(invia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(esci)
                        .addContainerGap(24, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(invia)
                    .addComponent(inserisci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(esci))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inviaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inviaActionPerformed
        comunica();
    }//GEN-LAST:event_inviaActionPerformed

    private void esciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_esciActionPerformed
        dispose();
        stato = Stato.DISCONNESSO;
        try {
            out.writeBytes(stato.toString());
        } catch (IOException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.exit(0);
    }//GEN-LAST:event_esciActionPerformed

    private void utentiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_utentiMouseClicked
        /*int n = utenti.getSelectedIndex();
        out = ChatTCP.s.connessi.get(n).getOut();
        in = ChatTCP.s.connessi.get(n).getIn();*/
    }//GEN-LAST:event_utentiMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTextPane chat;
    private javax.swing.JButton esci;
    private static javax.swing.JTextField inserisci;
    private javax.swing.JButton invia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> utenti;
    // End of variables declaration//GEN-END:variables
}
